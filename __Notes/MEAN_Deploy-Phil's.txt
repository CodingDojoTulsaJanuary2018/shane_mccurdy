// --------------------------------------- set up github repo with project ---------------------------------------
Remove existing git repos in the Angular app folder and/or the project folder with...
sudo rm -rf .git

Make sure .gitignore files are inplace BEFORE your first commit - copy and paste the Angular .gitignore into the project folder as well

Watch the commit and push process, as it should be short. If it's long and 
if there are a lot of node_modules and dist material that should have been 
ignored being uploaded, investigate further. You really want a clean commit.

// --------------------------------------- set up AWS instance ---------------------------------------

// --------------------------------------- install dependancies ---------------------------------------
sudo apt-get update
sudo apt-get install -y build-essential openssl libssl-dev pkg-config
sudo apt-get install -y nodejs nodejs-legacy
sudo apt-get install npm
sudo npm cache clean -f

sudo npm install -g node-gyp

sudo npm install -g n
sudo n stable

sudo apt-get install nginx

// --------------------------------------- clone project ---------------------------------------
cd /var/www
sudo git clone {{your project file path on github/bitbucket}}

// --------------------------------------- create angular folders and express server
cd {{project_name}}/{{angular_project}}
sudo npm install -g @angular/cli --unsafe-perm=true --allow-root
sudo npm install -g node-gyp (if gyp doesn't install | also: sudo su, cd /, then install gyp again, then CTRL + D to get out)
sudo npm install

sudo ng build

cd ..
sudo npm install

// --------------------------------------- set up nginx server ---------------------------------------
cd /etc/nginx/sites-available
sudo vim {{project_name}}

server {
    listen 80;
    location / {
        proxy_pass http://{{PRIVATE-IP}}:{{NODE-PROJECT-PORT}};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

sudo rm default

sudo ln -s /etc/nginx/sites-available/{{project_name}} /etc/nginx/sites-enabled/{{project_name}}

cd /etc/nginx/sites-enabled/
sudo rm default

// --------------------------------------- set up pm2 ---------------------------------------
sudo npm install pm2 -g

cd /var/www/{{project_name}}
pm2 start server.js
pm2 stop 0
pm2 restart 0
sudo service nginx reload && sudo service nginx restart

// --------------------------------------- set up MongoDB ---------------------------------------
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6

echo "deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list
sudo apt-get update

sudo apt-get install -y mongodb
sudo mkdir /data
sudo mkdir /data/db
sudo mongod

pm2 stop 0
pm2 restart 0
sudo service nginx reload && sudo service nginx restart